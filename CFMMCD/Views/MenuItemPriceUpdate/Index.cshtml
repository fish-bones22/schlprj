@model CFMMCD.Models.ViewModel.MenuItemMasterViewModel
@using CFMMCD.Models.ViewModel

@{
    ViewBag.Title = "Menu Item Price Update";
}
<h2 align="center" style="padding-top:50px">@ViewBag.Title</h2>
<hr/>
<!--Alerts-->
<div class="container-fluid">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissable fade in">@TempData["ErrorMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissable fade in">@TempData["SuccessMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
</div>
<div class="form-horizontal">
    <div class="container-fluid">
        <div class="col-lg-10 col-lg-offset-1">
            <input type="text" class="form-control" placeholder="Search menu item" id="search_dummy" />
        </div>
    </div>
    <hr />
    <div>
        @using (Html.BeginForm("UpdateDelete", "MenuItemPriceUpdate", FormMethod.Post, new { @id = "UpdateDelete", @enctype = "multipart/form-data" }))
        {
            if (Model.MIMMIC == null || Model.MIMMIC.Equals(""))
            {
                <div class="col-lg-12"><h4 align="center">Select Menu item to update</h4></div>
            }
            else
            {
                <div class="form-group">
                    <div class="col-lg-2">
                        <div class="container-fluid">
                            <div class="col-lg-6">
                                <strong>
                                    Menu item
                                </strong>
                                <hr />
                                @Html.LabelFor(m => Model.MIMMIC, Model.MIMMIC, new { @class = "form-label" })
                                @Html.HiddenFor(m => Model.MIMMIC)
                            </div>
                            <div class="col-lg-6">
                                <strong>
                                    Menu name
                                </strong>
                                <hr />
                                @Html.LabelFor(m => Model.MIMNAM, Model.MIMNAM, new { @class = "form-label" })
                                @Html.HiddenFor(m => Model.MIMNAM)
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-8" style="overflow-x:scroll">
                        <table class="table table-responsive table-hover" style="min-width:180%;">
                            <thead>
                                <tr>
                                    @for (int i = 0; i < Model.TierList.Count(); i++)
                                    {
                                        <th colspan="2">Tier @Model.TierList[i].TierName</th>
                                    }
                                </tr>
                                <tr>
                                    @foreach (var v in Model.TierList)
                                    {
                                        <td>Old price</td>
                                        <td>New price</td>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                <tr class="@Model.MIMMIC @Model.MIMNAM tr-collapse">
                                    @{
                                        for (int i = 0; i < Model.TierList.Count(); i++)
                                        {
                                            <td>
                                                @Html.LabelFor(m => Model.TierList[i].MIMPRI, Model.TierList[i].MIMPRI, new { @class = "form-label" })
                                                @Html.HiddenFor(m => Model.TierList[i].MIMPRI)
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(m => Model.TierList[i].MIMNPI, new { @class = "form-control" })
                                            </td>
                                            @Html.HiddenFor(m => Model.TierList[i].MIMMIC)
                                            @Html.HiddenFor(m => Model.TierList[i].MIMNAM)
                                            @Html.HiddenFor(m => @Model.TierList[i].TierId);
                                            @Html.HiddenFor(m => @Model.TierList[i].TierName);
                                        }
                                    }
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="col-lg-2">
                        <strong>Effective date</strong>
                        <hr />
                        @Html.TextBoxFor(m => Model.EffectiveDate, new { @class = "form-control", @type = "date" })
                    </div>
                </div>
            }
            <div class="form-inline bottom float" style="right:50px">
                @if (Model.MIMMIC != null && !Model.MIMMIC.Equals(""))
                {
                    <button type="submit" name="command" value="Save" class="btn btn-default">Save</button>
                    <label class="btn btn-secondary">
                        Import
                        <input type="file" name="FileUploaded" accept="xls|xlsx" id="file" style="display:none">
                    </label>
                }
            </div>
        }
    </div>
</div>

<!--Search result modal-->
<div class="modal fade" id="search-result-modal" role="dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button class="close" data-dismiss="modal">&times;</button>
            <h4>All items</h4>
            <div class="container-fluid">
                <input type="search" class="form-control" id="SearchFrontEnd" placeholder="Search menu item" autofocus />
                <div class="input-group float-right" style="padding-top:8px">
                    <label class="checkbox-inline form-label">
                        @Html.CheckBoxFor(m => m.InactiveItemsCb)Show inactive items
                    </label>
                </div>
            </div>
            <hr />
            <div class="container-fluid text-center">
                <div class="col-lg-4"><strong>Menu item code</strong></div>
                <div class="col-lg-8"><strong>Menu item name</strong></div>
            </div>
        </div>
        @using (Html.BeginForm())
        {
            <div class="modal-body">
                @for (int i = 0; i < Model.MenuItemMasterList.Count(); i++)
                {
                    string ActiveInactive = "active";
                    if (Model.MenuItemMasterList[i].MIMSTA.Equals("1"))
                    {
                        ActiveInactive = "inactive";
                    }
                    <button type="submit" class="modal-item-select tr-collapse @Model.MenuItemMasterList[i].MIMMIC @Model.MenuItemMasterList[i].MIMDSC @ActiveInactive" name="value" value=@Model.MenuItemMasterList[i].MIMMIC>
                        <div class="col-lg-4">
                            @Model.MenuItemMasterList[i].MIMMIC
                        </div>
                        <div class="col-lg-8">
                            @Model.MenuItemMasterList[i].MIMDSC
                        </div>
                    </button>
                }
            </div>
        }
    </div>
</div>

<script>
    // File upload handler
    $(window).ready(function () {
        $("#file").change(function () {
            $("#UpdateDelete").submit();
        });
    })
</script>
