@model CFMMCD.Models.ViewModel.MenuItemMasterViewModel
@using CFMMCD.Models.ViewModel

@{
    ViewBag.Title = "Menu Item Master";
}


<h2 align="center">@ViewBag.Title</h2>
<hr />
<!--Alerts-->
<div class="container">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissable fade in">@TempData["ErrorMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissable fade in">@TempData["SuccessMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
</div>
<!--Main content starts here-->
<div class="form-horizontal">
    <div class="container">
        <div class="col-lg-10 col-lg-offset-1">
            <input type="text" class="form-control" placeholder="Search menu item" id="search_dummy" />
        </div>
    </div>
    <hr/>
    <div class="col-lg-12">
        @using (Html.BeginForm("UpdateDelete", "MenuItemMaster", FormMethod.Post, new { }))
        {
            <div class="container-fluid">
                <div class="col-lg-8">
                    <div class="col-lg-8">

                        <div class="col-lg-12">
                            <div class="form-group">
                                <div class="col-lg-6" style="padding-left:0">
                                    @Html.LabelFor(m => Model.Trading_Area, "Trading area", new { @class = "form-label" } )
                                    @Html.DropDownListFor(m => Model.Trading_Area, new SelectList(Model.TradingAreaList, "value", "text", Model.Trading_Area), new { @class = "form-control input-sm"} )
                                </div>
                                <div class="col-lg-6" style="padding:0">
                                    @Html.LabelFor(m => Model.Category, "Category", new { @class = "form-label" })
                                    @Html.DropDownListFor(m => Model.Category, new SelectList(Model.CategoryList, "value", "text", Model.Category), new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>

                        <!--NP3 and NP6 Tab-->
                        <div class="col-lg-12">

                            <ul class="nav nav-tabs">
                                <li class="active"><a data-toggle="tab" href="#np3">NP3</a></li>
                                <li><a data-toggle="tab" href="#np6">NP6</a></li>
                            </ul>
                            <div class="tab-content" style="padding-top:10px">
                                <!--NP3-->
                                <div id="np3" class="tab-pane fade in active">
                                    <div class="form-group">
                                        <div class="col-lg-6" style="padding-left:0">
                                            <label class="form-label">Menu item number</label>
                                            @Html.TextBoxFor(m => Model.MIMMIC, new { @class = "form-control input-sm", @Value = Model.MIMMIC, @type = "number", @maxlength = "6", @max = "999999" })
                                        </div>
                                        <div class="col-lg-6" style="padding:0">
                                            <label class="form-label">Short name</label>
                                            @Html.TextBoxFor(m => Model.MIMNAM, new { @class = "form-control input-sm", @Value = Model.MIMNAM })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="form-label">Long name</label>
                                        @Html.TextBoxFor(m => Model.MIMLON, new { @class = "form-control input-sm", @Value = Model.MIMLON })
                                    </div>
                                </div>
                                <!--NP6-->
                                <div id="np6" class="tab-pane fade in">
                                    <div class="form-group">
                                        <div class="col-lg-6" style="padding-left:0">
                                            <label class="form-label">Menu item number (NP6)</label>
                                            @Html.TextBoxFor(m => Model.MIMMIC_NP6, new { @class = "form-control input-sm", @Value = Model.MIMMIC_NP6, @type = "number", @maxlength = "6" })
                                        </div>
                                        <div class="col-lg-6" style="padding:0">
                                            <label class="form-label">Short name (NP6)</label>
                                            @Html.TextBoxFor(m => Model.MIMNAM_NP6, new { @class = "form-control input-sm", @Value = Model.MIMNAM_NP6 })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="form-label">Long name (NP6)</label>
                                        @Html.TextBoxFor(m => Model.MIMLON_NP6, new { @class = "form-control input-sm", @Value = Model.MIMLON_NP6 })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label class="form-label">Description</label>
                                @Html.TextBoxFor(m => Model.MIMDSC, new { @class = "form-control input-sm" })
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.MIMFGC, "Product mix group", new { @class = "form-label" })
                                @Html.DropDownListFor(m => Model.MIMFGC, new SelectList(Model.MIMFGCList, "value", "text", Model.MIMFGC), new { @class = "form-control input-sm" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.MIMHPT, "Product mix group", new { @class = "form-label" })
                                @Html.DropDownListFor(m => Model.MIMHPT, new SelectList(Model.MIMHPTList, "value", "text", Model.MIMHPT), new { @class = "form-control input-sm" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.MIMWGR, "Product mix group", new { @class = "form-label" })
                                @Html.DropDownListFor(m => Model.MIMWGR, new SelectList(Model.MIMWGRList, "value", "text", Model.MIMWGR), new { @class = "form-control input-sm" })
                            </div>
                            <div class="form-group">
                                <label class="form-label" for="menu-item-1">Daypart code</label>
                                @Html.DropDownListFor(m => Model.MIMDPC, new SelectList(
                                    new List<Object>{
                                        new { value = "0" , text = "Breakfast"  },
                                        new { value = "1" , text = "Lunch" },
                                        new { value = "2" , text = "Breakfast+Lunch" }
                                    }, "value", "text", "0"), new { @class = "form-control input-sm", @Value = Model.MIMDPC })
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                <label class="form-label">Effective date</label>
                                @Html.TextBoxFor(m => Model.MIMEDT, new { @class = "form-control input-sm", @type = "date" })
                            </div>
                            <div class="form-group">
                                <label class="form-label">Status</label>
                                @Html.DropDownListFor(m => Model.MIMSTA, new SelectList(
                                    new List<Object>{
                                        new { value = "0" , text = "Active"  },
                                        new { value = "1" , text = "Inactive" }
                                    }, "value", "text", "0"), new { @class = "form-control input-sm" })
                            </div>
                            <div class="form-group">
                                <label class="form-label">Tax code</label>
                                @Html.TextBoxFor(m => Model.MIMUTC, new { @class = "form-control input-sm", @type = "number", @maxlength = "3" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label class="form-label">Location</label>
                                @Html.DropDownListFor(m => Model.Location, new SelectList(Model.LocationList, "value", "text", Model.Location), new { @class = "form-control input-sm" })
                            </div>
                            <div class="form-group">
                                <label class="form-label">Region</label>
                                @Html.DropDownListFor(m => Model.Region, new SelectList(new List<Object>()), new { @class = "form-control input-sm", @Id = "region", @Value = Model.Region })
                            </div>
                            <div class="form-group">
                                <label class="form-label">Province</label>
                                @Html.DropDownListFor(m => Model.Province, new SelectList(new List<Object>()), new { @class = "form-control input-sm", @Id = "province", @Value = Model.Province })
                            </div>
                            <div class="form-group">
                                <label class="form-label">City</label>
                                @Html.DropDownListFor(m => Model.City, new SelectList(new List<Object>()), new { @class = "form-control input-sm", @Id = "city", @Value = Model.City })
                            </div>
                            <div class="form-group">
                                <label class="form-label">Store list</label>
                                @Html.DropDownListFor(m => Model.Store, new SelectList(Model.StoreList, "value", "text", Model.Store), new { @class = "form-control input-sm" })
                            </div>
                            <div class="form-group">
                                <label class="form-label">
                                    @Html.CheckBoxFor(m => Model.SelectAllCb)
                                    Select all
                                </label>
                                <label class="form-label">
                                    @Html.CheckBoxFor(m => Model.SelectExcept)
                                    Select except
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <table class="table table-responsive">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Eat in</th>
                                    <th>Take out</th>
                                    <th>Non-product</th>
                                    <th>Others</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Tax</td>
                                    <td>
                                        @Html.DropDownListFor(m => Model.MIMTCI, new SelectList(
                                            new List<Object>{
                                                new { value = "01" , text = "Product" },
                                                new { value = "02" , text = "Non-product" }
                                            }, "value", "text", "0"), new { @class = "form-control input-sm" })
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(m => Model.MIMTCA, new SelectList(
                                            new List<Object>{
                                                new { value = "01" , text = "Product" },
                                                new { value = "02" , text = "Non-product" }
                                            }, "value", "text", "0"), new { @class = "form-control input-sm" })
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(m => Model.MIMNPT, new SelectList(
                                            new List<Object>{
                                                new { value = "01" , text = "Product" },
                                                new { value = "02" , text = "Non-product" }
                                            }, "value", "text", "0"), new { @class = "form-control input-sm" })
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(m => Model.MIMTCG, new SelectList(
                                            new List<Object>{
                                                new { value = "01" , text = "Product" },
                                                new { value = "02" , text = "Non-product" }
                                            }, "value", "text", "0"), new { @class = "form-control input-sm" })
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                </div>

                <div class="col-lg-4">

                    <h4>Recipe</h4>
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <table class="table table-responsive table-hover">
                                <thead>
                                    <tr>
                                        <th>Raw item number</th>
                                        <th>Raw item name</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{ 
                                        for(int i = 0; i < Model.MenuRecipeList.Count(); i++)
                                        {
                                            <tr>
                                                <td>@Model.MenuRecipeList[i].RIRRIC</td>
                                                <td>@Model.MenuRecipeList[i].RIMRID</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
            <div class="row">
                <table class="table table-responsive" style="margin-bottom:50px;" id="table-tier">
                    <thead>
                        <tr>
                            <th id="th-group-name">Group name</th>
                            <th></th>
                            <th>Eat in</th>
                            <th>Take out</th>
                            <th>Non-product</th>
                            <th>Others</th>
                            <th>Effective date</th>
                        </tr>
                    </thead>
                    <tbody style="max-height:250px;overflow-y:scroll;position:relative">
                        @{
                            for (int i = 0; i < Model.TierList.Count(); i++)
                            {
                                <tr class="@Model.TierList[i].TradingAreas tr-tier">
                                    @Html.HiddenFor(m => m.TierList[i].MIMMIC, new { @Value = Model.MIMMIC} )
                                    @Html.HiddenFor(m => m.TierList[i].MIMNAM, new { @Value = Model.MIMNAM })
                                    @Html.HiddenFor(m => Model.TierList[i].TierName)
                                    @Html.HiddenFor(m => Model.TierList[i].TierId)
                                    <td>Tier @Model.TierList[i].TierName</td>
                                    <td></td>
                                    <td>@Html.TextBoxFor(m => Model.TierList[i].MIMPRI, new { @class = "form-control input-sm", @type = "number" })</td>
                                    <td>@Html.TextBoxFor(m => Model.TierList[i].MIMPRO, new { @class = "form-control input-sm", @type = "number" })</td>
                                    <td>@Html.TextBoxFor(m => Model.TierList[i].MIMPRG, new { @class = "form-control input-sm", @type = "number" })</td>
                                    <td>@Html.TextBoxFor(m => Model.TierList[i].MIMNPA, new { @class = "form-control input-sm", @type = "number" })</td>
                                    <td>@Html.DisplayFor(m => Model.TierList[i].MIMPND, new { @class = "form-label"})</td>
                                </tr>
                                <tr class="@Model.TierList[i].TradingAreas tr-tier">
                                    <td></td>
                                    <td>New price</td>
                                    <td>@Html.TextBoxFor(m => Model.TierList[i].MIMNPI, new { @class = "form-control input-sm", @type = "number" })</td>
                                    <td>@Html.TextBoxFor(m => Model.TierList[i].MIMNPO, new { @class = "form-control input-sm", @type = "number" })</td>
                                    <td>@Html.TextBoxFor(m => Model.TierList[i].MIMNPD, new { @class = "form-control input-sm", @type = "number" })</td>
                                    <td>@Html.TextBoxFor(m => Model.TierList[i].MIMNNP, new { @class = "form-control input-sm", @type = "number" })</td>
                                    <td>@Html.TextBoxFor(m => m.TierList[i].MIMPND, new { @class = "form-control", @type = "date" })</td>
                                </tr>
                            }
                        }
                        
                    </tbody>
                </table>
            </div>
            <div class="form-inline bottom float" style="right:50px">
                <button type="submit" name="command" value="Save" class="btn btn-default">Save</button>
                <button type="submit" name="command" value="Delete" class="btn btn-default">Delete</button>
            </div>
        }
    </div>
</div>

<!--Search result modal-->
<div class="modal fade" id="search-result-modal" role="dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button class="close" data-dismiss="modal">&times;</button>
            <h4>All items</h4>
            <div class="container-fluid">
                <input type="search" class="form-control" id="SearchFrontEnd" placeholder="Search menu item" autofocus/>
                <div class="input-group float-right" style="padding-top:8px">
                    <label class="checkbox-inline form-label">
                        @Html.CheckBoxFor(m => m.InactiveItemsCb)Show inactive items
                    </label>
                </div>
            </div>
            <hr />
            <div class="container-fluid text-center">
                <div class="col-lg-4"><strong>Menu item code</strong></div>
                <div class="col-lg-8"><strong>Menu item name</strong></div>
            </div>
        </div>
        @using (Html.BeginForm())
        {
            <div class="modal-body">
                @for (int i = 0; i < Model.MenuItemMasterList.Count(); i++)
                { 
                    string ActiveInactive = "active";
                    if (Model.MenuItemMasterList[i].MIMSTA.Equals("1"))
                    {
                        ActiveInactive = "inactive";
                    }
                    <button type="submit" class="modal-item-select tr-collapse @Model.MenuItemMasterList[i].RIRMIC @Model.MenuItemMasterList[i].MIMDSC @ActiveInactive" name="value" value=@Model.MenuItemMasterList[i].RIRMIC>
                        <div class="col-lg-4">
                            @Model.MenuItemMasterList[i].RIRMIC
                        </div>
                        <div class="col-lg-8">
                            @Model.MenuItemMasterList[i].MIMDSC
                        </div>
                    </button>
                }
            </div>
        }
    </div>
</div>
<script>
     @{
         string region = "NCR";
         string province = "";
         string city = "";
         if (@Model.Region != null)
         {
             region = @Model.Region;
         }
         if (@Model.Province != null)
         {
             province = @Model.Province;
         }
         if (@Model.City != null)
         {
             city = @Model.City;
         }
     }
    $(window).ready(function () {
        // Location Select
        $("option[value='@region'").attr("selected", "selected");
        updateProvince();
        $("option[value='@province'").attr("selected", "selected");
        updateCity();
        $("option[value='@city'").attr("selected", "selected");

        filterTier();
        $("#Trading_Area").change(filterTier);
    });

    // Tier filter with respect to Trading area selected
    function filterTier() {
        var tradingAreaSelected = $("#Trading_Area option:selected").text().replace(/ /g, "");
        // Group name
        $("#th-group-name").text($("#Trading_Area option:selected").text());
        // Hide table if trading area has no value
        if ($("#Trading_Area option:selected").val() == "0")
            $("#table-tier").addClass("hidden");
        else
            $("#table-tier").removeClass("hidden");
        // Filter each row 
        $(".tr-tier").each(function () {
            if (!$(this).hasClass(tradingAreaSelected)) {
                $(this).addClass("hidden");
                $(this).children().children("input").prop("disabled", true);
            } else {
                $(this).removeClass("hidden");
                $(this).children().children("input").prop("disabled", false);
            }
        });
    }
</script>
