@model CFMMCD.Models.ViewModel.VendorMasterViewModel
@using CFMMCD.Models.ViewModel

@{
    ViewBag.Title = "Vendor Master";
}

<h2 align="center">@ViewBag.Title</h2>
<hr />
<!--Alerts-->
<div class="container">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissable fade in">@TempData["ErrorMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissable fade in">@TempData["SuccessMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
</div>
<!-- Main body -->
<div class="form-horizontal">
    <div class="container-fluid">
        <div class="col-lg-7 col-lg-offset-2">
            <input type="text" class="form-control" placeholder="Search vendor" id="search_dummy" />
        </div>
        <div class="col-lg-1">
            <a href="~/VendorMaster/Index" class="btn btn-default btn-circle"><span class="glyphicon glyphicon-refresh"></span></a>
        </div>
    </div>
    <hr/>
    @using (Html.BeginForm("UpdateDelete", "VendorMaster", FormMethod.Post, new { @id = "UpdateDelete", @enctype = "multipart/form-data" }))
    {
        <div class="container-fluid">
            <div class="col-lg-6 col-lg-offset-3">
                <div class="col-lg-5">
                    <div class="form-group">
                        @Html.LabelFor(m => m.VEMVEN, "Vendor number", new {  @class = "form-label" } )
                        @Html.TextBoxFor(m => Model.VEMVEN, new { @class = "form-control input-sm", @type = "number", @max = "999", @required = "required" })
                    </div>
                </div>
                <div class="col-lg-6 col-lg-offset-1">
                    <div class="form-group">
                        @Html.LabelFor(m => m.VEMDS1, "Vendor description", new { @class = "form-label" })
                        @Html.TextBoxFor(m => Model.VEMDS1, new { @class = "form-control input-sm", @maxlength = "20", @required = "required" })
                    </div>
                 </div>
            </div>
        </div>
        <hr/>
        <div class="container-fluid">
            <div class="col-lg-3 col-lg-offset-1">
                <div class="col-lg-12">
                    <label class="form-label">Location</label>
                    @Html.DropDownListFor(m => Model.VEMLOC, new SelectList(Model.LocationList, "value", "text", "0"), new { @class = "form-control input-sm",@maxlength = "1" })
                </div>
                <div class="col-lg-12">
                    @Html.LabelFor(model => Model.Region, "Region", new { @class = "form-label" })
                    @Html.DropDownListFor(m => Model.Region, new SelectList(new List<Object>()), new { @class = "form-control input-sm", @Id = "region", @Value = Model.Region })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="col-lg-12">
                    @Html.LabelFor(model => Model.Province, "Province", new { @class = "form-label" })
                    @Html.DropDownListFor(m => Model.Province, new SelectList(new List<Object>()), new { @class = "form-control input-sm", @Id = "province", @Value = Model.Province })
                </div>

                <div class="col-lg-12">
                    @Html.LabelFor(model => Model.City, "City", new { @class = "form-label col-md-3" })
                    @Html.DropDownListFor(m => Model.City, new SelectList(new List<Object>()), new { @class = "form-control input-sm", @Id = "city", @Value = Model.City })
                </div>
            </div>
            <div class="col-lg-3 col-lg-offset-1">
                <div class="form-group">
                    <label class="form-label">Store list</label>
                    @Html.DropDownListFor(m => Model.Store, new SelectList(Model.StoreList, "value", "text", "0"), new { @class = "form-control input-sm" })
                </div>
                <div class="form-group">
                    <label class="form-label">
                        @Html.CheckBoxFor(m => Model.SelectAllCb)
                        Select all
                    </label>
                    <label class="form-label">
                        @Html.CheckBoxFor(m => Model.SelectExceptCb)
                        Select except
                    </label>
                </div>
            </div>
        </div>
        <div class="form-inline bottom float" style="right:50px">
            <button type="submit" name="command" value="Save" class="btn btn-default">Save</button>
            <label class="btn btn-secondary">
                Import
                <input type="file" name="FileUploaded" value="Import" accept="xls|xlsx" id="file" style="display:none">
            </label>
            @if (Model.VEMVEN != null && !Model.VEMVEN.Equals(""))
            {
                <input type="submit" name="command" value="Delete" class="btn btn-secondary" />
            }
        </div>
        <!--div class="container-fluid">
            <div class="col-lg-6">
                <div class="col-lg-12">
                    <div class="form-group">
                        #Html.LabelFor(m => m.VEMVEN, "Vendor number", new {  #class = "form-label" } )
                        #Html.TextBoxFor(m => m.VEMVEN, new { #class = "form-control input-sm", #Value = Model.VEMADE, #type = "number", #maxlength = "3" })
                    </div>
                    <div class="form-group">
                        #Html.LabelFor(m => m.VEMDS1, "Vendor description", new { #class = "form-label" })
                        #Html.TextBoxFor(m => m.VEMDS1, new { #class = "form-control input-sm", #Value = Model.VEMDS1, #maxlength = "20" })
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            #Html.LabelFor(m => m.VEMCCD, "Country code", new { #class = "form-label" })
                            #Html.TextBoxFor(m => m.VEMCCD, new { #class = "form-control input-sm", #Value = Model.VEMCCD, #maxlength = "3" })
                        </div>
                        <div class="col-lg-6">
                            #Html.LabelFor(m => m.VEMZIP, "ZIP code", new { #class = "form-label" })
                            #Html.TextBoxFor(m => m.VEMZIP, new { #class = "form-control input-sm", #Value = Model.VEMZIP, #type = "number", #maxlength = "5" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            #Html.LabelFor(m => m.VEMCTY, "City", new { #class = "form-label" })
                            #Html.TextBoxFor(m => m.VEMCTY, new { #class = "form-control input-sm", #Value = Model.VEMCTY, #maxlength = "20" })
                        </div>
                        <div class="col-lg-6">
                            #Html.LabelFor(m => m.VEMSTR, "Street", new { #class = "form-label" })
                            #Html.TextBoxFor(m => m.VEMSTR, new { #class = "form-control input-sm", #Value = Model.VEMSTR, #maxlength = "20" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="col-lg-12">
                    <div class="row">
                        <div class="col-lg-6">
                            #Html.LabelFor(m => m.VEMTEL, "Phone number", new { #class = "form-label" })
                            #Html.TextBoxFor(m => m.VEMTEL, new { #class = "form-control input-sm", #Value = Model.VEMTEL, #maxlength = "18" })
                        </div>
                        <div class="col-lg-6">
                            #Html.LabelFor(m => m.VEMSTN, "Short number", new { #class = "form-label" })
                            #Html.TextBoxFor(m => m.VEMSTN, new { #class = "form-control input-sm", #Value = Model.VEMSTN, #maxlength = "5" })
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                #Html.LabelFor(m => m.VEMDAY, "Minimum stock buffer/Global reserve", new { #class = "form-label" })
                                #Html.TextBoxFor(m => m.VEMDAY, new { #class = "form-control input-sm", #Value = Model.VEMDAY, #type = "number", #maxlength = "5" })
                            </div>
                            <div class="col-lg-6">
                                #Html.LabelFor(m => m.VEMADE, "Auto-delivery", new { #class = "form-label" })
                                #Html.TextBoxFor(m => m.VEMADE, new { #class = "form-control input-sm", #Value = Model.VEMADE, #maxlength = "1" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                #Html.LabelFor(m => m.VEMWSI, "WSI number", new { #class = "form-label" })
                                #Html.TextBoxFor(m => m.VEMWSI, new { #class = "form-control input-sm", #Value = Model.VEMWSI, #type = "number", #maxlength = "5" })
                            </div>
                            <div class="col-lg-6">
                                #Html.LabelFor(m => m.VEMTID, "COM. number ID", new { #class = "form-label" })
                                #Html.TextBoxFor(m => m.VEMTID, new { #class = "form-control input-sm", #Value = Model.VEMTID, #maxlength = "5" }) 
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                #Html.LabelFor(m => m.VEMLOC, "Local vendor", new { #class = "form-label" })
                                #Html.DropDownListFor(m => m.VEMLOC, new SelectList(
                                new List<Object>{
                                    new { value = "0" , text = "0"  },
                                    new { value = "1" , text = "1" }
                                }, "value", "text", "0"),
                                new { #class = "form-control input-sm", #Value = Model.VEMLOC })
                            </div>
                            <div class="col-lg-6">
                                #Html.LabelFor(m => m.VEMDEL, "Central vendor", new { #class = "form-label" })
                                #Html.TextBoxFor(m => m.VEMDEL, new { #class = "form-control input-sm", #Value = Model.VEMDEL, #maxlength = "5" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                #Html.LabelFor(m => m.VEMSTA, "Status", new { #class = "form-label" })
                                #Html.DropDownListFor(m => m.VEMSTA, new SelectList(
                                new List<Object>{
                                    new { value = "0" , text = "Active"  },
                                    new { value = "1" , text = "Inactive" }
                                }, "value", "text", "0"),
                                 new { #class = "form-control input-sm", #Value = Model.VEMSTA })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div-->
    }
</div>

<div class="modal fade" id="search-result-modal" role="dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button class="close" data-dismiss="modal">&times;</button>
            <h4>All items</h4>
            <div class="container-fluid">
                <input type="search" class="form-control" id="SearchFrontEnd" placeholder="Search vendor" autofocus />
            </div>
            <hr />
            <div class="container-fluid text-center">
                <div class="col-lg-4">Vendor number</div>
                <div class="col-lg-8">Vendor name</div>
            </div>
        </div>
        @using (Html.BeginForm())
        {
            <div class="modal-body">
                @for (int i = 0; i < Model.VendorMasterList.Count(); i++)
                { 
                    string ActiveInactive = "active";
                    <button type="submit" class="modal-item-select tr-collapse @Model.VendorMasterList[i].VEMVEN @Model.VendorMasterList[i].VEMDS1 @ActiveInactive" name="value" value=@Model.VendorMasterList[i].VEMVEN>
                        <div class="col-lg-3">
                            @Model.VendorMasterList[i].VEMVEN
                        </div>
                        <div class="col-lg-9">
                            @Model.VendorMasterList[i].VEMDS1
                        </div>
                    </button>
                }
            </div>
        }
    </div>
</div>
<script>
 @{
        string region = "";
        string province = "";
        string city = "";
        if (@Model.Region != null)
        {
            region = @Model.Region;
        }
        if (@Model.Province != null)
        {
            province = @Model.Province;
        }
        if (@Model.City != null)
        {
            city = @Model.City;
        }
    }
    $(window).ready(function () {
        // Location Select
	    $("option[value='@region'").attr("selected", "selected");
	    updateProvince();
	    $("option[value='@province'").attr("selected", "selected");
	    updateCity();
	    $("option[value='@city'").attr("selected", "selected");
        // Store Attribute Select
        $(".store-attrib").click(function(e) {
            $(".store-attrib").not(this).each(function() {
                $(this).attr("value", "0");
                $(this).val("0");
                $(".store-attrib option[value='0']").attr("selected", "selected");
            });
            $(".store-attrib").each(function() {
                if ($(this).val() == "0") {
                    $(this).css("background-color", "#eee");
                } else {
                    $(this).css("background-color", "white");
                }
            });
        });

        // File upload handler
        $("#file").change(function () {
            $("#UpdateDelete").submit();
        });

	});
</script>