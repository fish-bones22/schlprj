@model CFMMCD.Models.ViewModel.VendorMasterViewModel
@using CFMMCD.Models.ViewModel

@{
    ViewBag.Title = "Vendor Master";
    int HasSearch = 0;
    if (TempData["SearchResult"] != null)
    {
        HasSearch = (int)TempData["SearchResult"];
    }
}

<h2>Vendor Master</h2>
<!--Alerts-->
<div class="container">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissable fade in">@TempData["ErrorMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissable fade in">@TempData["SuccessMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
</div>
<!-- Main body -->
<div class="form-horizontal">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container-fluid">
            <div class="col-lg-2 label-container-left">
                <label class="form-label" for="menu-item">Search Vendor number/description</label>
            </div>
            <div class="col-lg-7">
                @Html.TextBoxFor(m => m.SearchItem, new { @class = "form-control" })
                <div class="input-group float-right" style="padding-top:8px">
                    <label class="checkbox-inline form-label">
                        @Html.CheckBoxFor(m => m.InactiveItemsCb)Show inactive items
                    </label>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-1">
                <button type="submit" class="btn btn-default" name="command" value="Search"><span class="glyphicon glyphicon-search"></span>&nbsp;Search</button>
            </div>
        </div>
    }
    <hr/>
    @using (Html.BeginForm("UpdateDelete", "VendorMaster", FormMethod.Post, new { }))
    {
        <div class="container-fluid">

        </div>
        <!--div class="container-fluid">
            <div class="col-lg-6">
                <div class="col-lg-12">
                    <div class="form-group">
                        Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMVEN, "Vendor number", new {  Model.MenuItemMasterList[i]class = "form-label" } )
                        Model.MenuItemMasterList[i]Html.TextBoxFor(m => m.VEMVEN, new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMADE, Model.MenuItemMasterList[i]type = "number", Model.MenuItemMasterList[i]maxlength = "3" })
                    </div>
                    <div class="form-group">
                        Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMDS1, "Vendor description", new { Model.MenuItemMasterList[i]class = "form-label" })
                        Model.MenuItemMasterList[i]Html.TextBoxFor(m => m.VEMDS1, new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMDS1, Model.MenuItemMasterList[i]maxlength = "20" })
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMCCD, "Country code", new { Model.MenuItemMasterList[i]class = "form-label" })
                            Model.MenuItemMasterList[i]Html.TextBoxFor(m => m.VEMCCD, new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMCCD, Model.MenuItemMasterList[i]maxlength = "3" })
                        </div>
                        <div class="col-lg-6">
                            Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMZIP, "ZIP code", new { Model.MenuItemMasterList[i]class = "form-label" })
                            Model.MenuItemMasterList[i]Html.TextBoxFor(m => m.VEMZIP, new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMZIP, Model.MenuItemMasterList[i]type = "number", Model.MenuItemMasterList[i]maxlength = "5" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMCTY, "City", new { Model.MenuItemMasterList[i]class = "form-label" })
                            Model.MenuItemMasterList[i]Html.TextBoxFor(m => m.VEMCTY, new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMCTY, Model.MenuItemMasterList[i]maxlength = "20" })
                        </div>
                        <div class="col-lg-6">
                            Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMSTR, "Street", new { Model.MenuItemMasterList[i]class = "form-label" })
                            Model.MenuItemMasterList[i]Html.TextBoxFor(m => m.VEMSTR, new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMSTR, Model.MenuItemMasterList[i]maxlength = "20" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="col-lg-12">
                    <div class="row">
                        <div class="col-lg-6">
                            Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMTEL, "Phone number", new { Model.MenuItemMasterList[i]class = "form-label" })
                            Model.MenuItemMasterList[i]Html.TextBoxFor(m => m.VEMTEL, new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMTEL, Model.MenuItemMasterList[i]maxlength = "18" })
                        </div>
                        <div class="col-lg-6">
                            Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMSTN, "Short number", new { Model.MenuItemMasterList[i]class = "form-label" })
                            Model.MenuItemMasterList[i]Html.TextBoxFor(m => m.VEMSTN, new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMSTN, Model.MenuItemMasterList[i]maxlength = "5" })
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMDAY, "Minimum stock buffer/Global reserve", new { Model.MenuItemMasterList[i]class = "form-label" })
                                Model.MenuItemMasterList[i]Html.TextBoxFor(m => m.VEMDAY, new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMDAY, Model.MenuItemMasterList[i]type = "number", Model.MenuItemMasterList[i]maxlength = "5" })
                            </div>
                            <div class="col-lg-6">
                                Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMADE, "Auto-delivery", new { Model.MenuItemMasterList[i]class = "form-label" })
                                Model.MenuItemMasterList[i]Html.TextBoxFor(m => m.VEMADE, new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMADE, Model.MenuItemMasterList[i]maxlength = "1" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMWSI, "WSI number", new { Model.MenuItemMasterList[i]class = "form-label" })
                                Model.MenuItemMasterList[i]Html.TextBoxFor(m => m.VEMWSI, new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMWSI, Model.MenuItemMasterList[i]type = "number", Model.MenuItemMasterList[i]maxlength = "5" })
                            </div>
                            <div class="col-lg-6">
                                Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMTID, "COM. number ID", new { Model.MenuItemMasterList[i]class = "form-label" })
                                Model.MenuItemMasterList[i]Html.TextBoxFor(m => m.VEMTID, new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMTID, Model.MenuItemMasterList[i]maxlength = "5" }) 
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMLOC, "Local vendor", new { Model.MenuItemMasterList[i]class = "form-label" })
                                Model.MenuItemMasterList[i]Html.DropDownListFor(m => m.VEMLOC, new SelectList(
                                new List<Object>{
                                    new { value = "0" , text = "0"  },
                                    new { value = "1" , text = "1" }
                                }, "value", "text", "0"),
                                new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMLOC })
                            </div>
                            <div class="col-lg-6">
                                Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMDEL, "Central vendor", new { Model.MenuItemMasterList[i]class = "form-label" })
                                Model.MenuItemMasterList[i]Html.TextBoxFor(m => m.VEMDEL, new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMDEL, Model.MenuItemMasterList[i]maxlength = "5" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                Model.MenuItemMasterList[i]Html.LabelFor(m => m.VEMSTA, "Status", new { Model.MenuItemMasterList[i]class = "form-label" })
                                Model.MenuItemMasterList[i]Html.DropDownListFor(m => m.VEMSTA, new SelectList(
                                new List<Object>{
                                    new { value = "0" , text = "Active"  },
                                    new { value = "1" , text = "Inactive" }
                                }, "value", "text", "0"),
                                 new { Model.MenuItemMasterList[i]class = "form-control input-sm", Model.MenuItemMasterList[i]Value = Model.VEMSTA })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-inline bottom float" style="right:50px">
                <button type="submit" name="command" value="Save" class="btn btn-default">Save</button>
                <button type="submit" name="command" value="Delete" class="btn btn-default">Delete</button>
            </div>
        </div-->
    }
</div>

<div class="modal fade" id="search-result-modal" role="dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button class="close" data-dismiss="modal">&times;</button>
            <h4>Search results</h4>
        </div>
        @using (Html.BeginForm("DisplaySearchResult", "VendorMaster", FormMethod.Post, new { }))
        {
            List<VendorMasterViewModel> VEMList = (List<VendorMasterViewModel>)Session["ViewModelList"];
            if (VEMList != null)
            {
                <div class="modal-body">
                    @{if (HasSearch == 1 && VEMList != null)
                        {
                            foreach (VendorMasterViewModel vm in VEMList)
                            {
                                <button type="submit" class="modal-item-select" name="value" value=@vm.VEMVEN>
                                    <div class="col-lg-3">
                                        @vm.VEMVEN
                                    </div>
                                    <div class="col-lg-9">
                                        @vm.VEMDS1
                                    </div>
                                </button>
                            }
                        }
                    }
                </div>
            }
        }
    </div>
</div>

<script>
    $(window).ready(function () {
        if (@HasSearch === 1) {
            $("#search-result-modal").modal('show');
        }
    });
</script>
