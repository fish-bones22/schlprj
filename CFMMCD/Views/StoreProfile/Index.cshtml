@model CFMMCD.Models.ViewModel.StoreProfileViewModel

@{
    ViewBag.Title = "Store Profile";
}

<h2 align="center">Store Profile</h2>



<div class="form-horizontal">
<hr />
        
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissable fade in">@TempData["ErrorMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
    if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissable fade in">@TempData["SuccessMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
    <div class="row">
        <div class="col-lg-8">
            <div class="col-lg-4">
                @Html.LabelFor(model => model.StoreNameNumber, "Store Name/Number", new { @class = "form-label right" })
            </div>
            <div class="col-lg-8">
                @Html.TextBoxFor(model => model.StoreNameNumber, new { @class = "form-control input-sm" })
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-4">
            <button type="submit" name="command" value="Search" class="btn btn-default">Search</button>
        </div>
    </div>
}
    <hr />
@using (Html.BeginForm("UpdateDelete", "StoreProfile", FormMethod.Post, new { }))
{
    @Html.AntiForgeryToken()
        <div class="container">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-lg-4">
                    <div class="container">
                        @Html.LabelFor(model => model.STORE_NO, "Store number", new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.STORE_NO, new { @class = "form-control input-sm", @Value = Model.STORE_NO })
                        @Html.ValidationMessageFor(model => model.STORE_NO, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="container">
                        @Html.LabelFor(model => model.STORE_NAME, "Store name", new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.STORE_NAME, new { @class = "form-control input-sm", @Value = Model.STORE_NAME })
                        @Html.ValidationMessageFor(model => model.STORE_NAME, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="container">
                        @Html.LabelFor(model => model.ADDRESS, "Address", new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.ADDRESS, new { @class = "form-control input-sm", @Value = Model.ADDRESS })
                        @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <h4><strong>Business Extension</strong></h4>
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.Hrs24Input, new { @Value = Model.Hrs24Input })
                    @Html.LabelFor(model => model.Hrs24Input, "24-hrs", new { @class = "form-label " })
                </div>
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.MallInput, new { @Value = Model.MallInput })
                    @Html.LabelFor(model => model.MallInput, "Mall", new { @class = "form-label " })
                </div>
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.McVanInput, new { @Value = Model.McVanInput })
                    @Html.LabelFor(model => model.McVanInput, "McVan", new { @class = "form-label " })
                </div>
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.McDeliveryInput, new { @Value = Model.McDeliveryInput })
                    @Html.LabelFor(model => model.McDeliveryInput, "McDelivery", new { @class = "form-label " })
                </div>
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.DriveThruInput, new { @Value = Model.DriveThruInput } )
                    @Html.LabelFor(model => model.DriveThruInput, "DriveT Thru", new { @class = "form-label" })
                </div>
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.TakeOutCounterInput, new { @Value = Model.TakeOutCounterInput })
                    @Html.LabelFor(model => model.TakeOutCounterInput, "Takeout counter", new { @class = "form-label " })
                </div>
            </div>

            <div class="col-lg-4">
                <div class="container">
                    <div class="form-group">
                        @Html.LabelFor(model => model.BREAKFAST_PRICE_TIER, "Breakfast tier", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.BREAKFAST_PRICE_TIER, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.BREAKFAST_PRICE_TIER })
                        @Html.ValidationMessageFor(model => model.BREAKFAST_PRICE_TIER, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.REGULAR_PRICE_TIER, "Regular price tier", new { @class = "form-label " })
                        @Html.DropDownListFor(m => m.REGULAR_PRICE_TIER, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.REGULAR_PRICE_TIER })
                        @Html.ValidationMessageFor(model => model.REGULAR_PRICE_TIER, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DC_PRICE_TIER, "DC price tier", new { @class = "form-label " })
                        @Html.DropDownListFor(m => m.DC_PRICE_TIER, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.DC_PRICE_TIER })
                        @Html.ValidationMessageFor(model => model.DC_PRICE_TIER, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MDS_PRICE_TIER, "MDS price tier", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.MDS_PRICE_TIER, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.MDS_PRICE_TIER })
                        @Html.ValidationMessageFor(model => model.MDS_PRICE_TIER, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MCCAFE_LEVEL_2_PRICE_TIER, "McCafe Level 2 price tier", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.MCCAFE_LEVEL_2_PRICE_TIER, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.MCCAFE_LEVEL_2_PRICE_TIER })
                        @Html.ValidationMessageFor(model => model.MCCAFE_LEVEL_2_PRICE_TIER, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MCCAFE_LEVEL_3_PRICE_TIER, "McCafe Level 3 price tier", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.MCCAFE_LEVEL_3_PRICE_TIER, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.MCCAFE_LEVEL_3_PRICE_TIER })
                        @Html.ValidationMessageFor(model => model.MCCAFE_LEVEL_3_PRICE_TIER, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MCCAFE_BISTRO_PRICE_TIER, "McCafe BISTRO price tier", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.MCCAFE_BISTRO_PRICE_TIER, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.MCCAFE_BISTRO_PRICE_TIER })
                        @Html.ValidationMessageFor(model => model.MCCAFE_BISTRO_PRICE_TIER, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PROJECT_GOLD_PRICE_TIER, "Project Gold price tier", new { @class = "form-label " })
                        @Html.DropDownListFor(m => m.PROJECT_GOLD_PRICE_TIER, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.PROJECT_GOLD_PRICE_TIER })
                        @Html.ValidationMessageFor(model => model.PROJECT_GOLD_PRICE_TIER, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="container">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PROFIT_CENTER, "Profit center", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.PROFIT_CENTER, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.DC_PRICE_TIER })
                        @Html.ValidationMessageFor(model => model.PROFIT_CENTER, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OWNERSHIP, "Ownership", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.OWNERSHIP, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.DC_PRICE_TIER })
                        @Html.ValidationMessageFor(model => model.OWNERSHIP, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.REGION, "Region", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.REGION, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.REGION })
                        @Html.ValidationMessageFor(model => model.REGION, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PROVINCE, "Province", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.PROVINCE, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.PROVINCE })
                        @Html.ValidationMessageFor(model => model.PROVINCE, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LOCATION, "Location", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.LOCATION, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.LOCATION })
                        @Html.ValidationMessageFor(model => model.LOCATION, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CITY, "City", new { @class = "form-label col-md-3" })
                        @Html.DropDownListFor(m => m.CITY, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "0"  },
                                new { value = "1" , text = "1" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.CITY })
                        @Html.ValidationMessageFor(model => model.CITY, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <h4 align="center"><strong>Store Attributes</strong></h4>
            <div class="col-md-4">
                <div class="container">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SOFT_SERVE_OR_VANILLA_POWDER_MIX, "Soft serve or vanilla powder mix", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.SOFT_SERVE_OR_VANILLA_POWDER_MIX, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "Soft serve"  },
                                new { value = "1" , text = "Vanilla powder mix" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.SOFT_SERVE_OR_VANILLA_POWDER_MIX })
                        @Html.ValidationMessageFor(m => m.SOFT_SERVE_OR_VANILLA_POWDER_MIX, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.FRESH_OR_FROZEN, "Fresh or frozen", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.FRESH_OR_FROZEN, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "Fresh"  },
                                new { value = "1" , text = "Frozen" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.FRESH_OR_FROZEN })
                        @Html.ValidationMessageFor(m => m.FRESH_OR_FROZEN, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="container">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SIMPLOT_OR_MCCAIN, "Simplot or McCain", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.SIMPLOT_OR_MCCAIN, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "Simplot"  },
                                new { value = "1" , text = "McCain" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.SIMPLOT_OR_MCCAIN })
                        @Html.ValidationMessageFor(m => m.SIMPLOT_OR_MCCAIN, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.PAPER_OR_PLASTIC, "Paper or plastic", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.PAPER_OR_PLASTIC, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "Paper"  },
                                new { value = "1" , text = "Plastic" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.PAPER_OR_PLASTIC })
                        @Html.ValidationMessageFor(m => m.PAPER_OR_PLASTIC, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="container">
                    <div class="form-group">
                        @Html.LabelFor(m => m.MCCORMICK_OR_GSF, "McCormick or GSF", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.MCCORMICK_OR_GSF, new SelectList(
                            new List<Object>{
                                new { value = "0" , text = "McCormick"  },
                                new { value = "1" , text = "GSF" }
                            },
                            "value",
                            "text",
                            "0"), new { @class = "form-control input-sm", @Value = Model.MCCORMICK_OR_GSF })
                        @Html.ValidationMessageFor(m => m.MCCORMICK_OR_GSF, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="button-container" align="right">
            <div class="form-group">
                <input type="submit" name="command" value="Save" class="btn btn-default" />
                <input type="submit" name="command" value="Delete" class="btn btn-default" />
            </div>
        </div>
}
</div>
