@model CFMMCD.Models.ViewModel.StoreProfileViewModel
@using CFMMCD.Models.ViewModel

@using CFMMCD.DropDown

@{
    ViewBag.Title = "Store Profile";
}

<h2 align="center">Store Profile</h2>

<hr />

<div class="container">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissable fade in">@TempData["ErrorMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissable fade in">@TempData["SuccessMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
</div>

<div class="form-horizontal">
    <!--Search-->
    <div class="container-fluid">
        <div class="col-lg-10 col-lg-offset-1">
            <input type="text" class="form-control" placeholder="Search store" id="search_dummy" />
        </div>
    </div>

    <hr />

    @using (Html.BeginForm("UpdateDelete", "StoreProfile", FormMethod.Post, new { }))
    {
        @Html.AntiForgeryToken()
        <div class="container-fluid">
            <div class="form-group">
                <div class="col-lg-4">
                    <div class="container-fluid">
                        @Html.LabelFor(model => Model.STORE_NO, "Store number", new { @class = "form-label" })
                        @Html.TextBoxFor(model => Model.STORE_NO, new { @class = "form-control input-sm", @type = "number", @max = "999999" })
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="container-fluid">
                        @Html.LabelFor(model => Model.STORE_NAME, "Store name", new { @class = "form-label" })
                        @Html.TextBoxFor(model => Model.STORE_NAME, new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="container-fluid">
                        @Html.LabelFor(model => Model.ADDRESS, "Address", new { @class = "form-label" })
                        @Html.TextBoxFor(model => Model.ADDRESS, new { @class = "form-control input-sm" })
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <h4><strong>Business Extension</strong></h4>
                @{
                    for (int i = 0; i < Model.BusinessExtList.Count(); i++)
                    {
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => Model.BET[i])
                            @Html.LabelFor(m => Model.BET[i], Model.BusinessExtList[i].text, new { @class = "form-label" })
                            @Html.HiddenFor(m => Model.BusinessExtList[i].value)
                        </div>
                    }
                }
            </div>

            <div class="col-lg-4">
                <div class="container-fluid">
                    <div class="form-group">
                        @Html.LabelFor(model => Model.BREAKFAST_PRICE_TIER, "Breakfast tier", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.BREAKFAST_PRICE_TIER, new SelectList(Model.BreakfastTier, "value", "text", Model.BreakfastTier[0].value), new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(model => Model.BREAKFAST_PRICE_TIER, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.REGULAR_PRICE_TIER, "Regular price tier", new { @class = "form-label " })
                        @Html.DropDownListFor(m => Model.REGULAR_PRICE_TIER, new SelectList(Model.RegularTier, "value", "text", Model.RegularTier[0].value), new { @class = "form-control input-sm" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.DC_PRICE_TIER, "DC price tier", new { @class = "form-label " })
                        @Html.DropDownListFor(m => Model.DC_PRICE_TIER, new SelectList(Model.DCTier, "value", "text", Model.DCTier[0].value), new { @class = "form-control input-sm" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.MDS_PRICE_TIER, "MDS price tier", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.MDS_PRICE_TIER, new SelectList(Model.MDSTier, "value", "text", Model.MDSTier[0].value), new { @class = "form-control input-sm" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.MCCAFE_LEVEL_2_PRICE_TIER, "McCafe Level 2 price tier", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.MCCAFE_LEVEL_2_PRICE_TIER, new SelectList(Model.McCafeLevel2Tier, "value", "text", Model.McCafeLevel2Tier[0].value), new { @class = "form-control input-sm" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.MCCAFE_LEVEL_3_PRICE_TIER, "McCafe Level 3 price tier", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.MCCAFE_LEVEL_3_PRICE_TIER, new SelectList(Model.McCafeLevel3Tier, "value", "text", Model.McCafeLevel3Tier[0].value), new { @class = "form-control input-sm" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.MCCAFE_BISTRO_PRICE_TIER, "McCafe BISTRO price tier", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.MCCAFE_BISTRO_PRICE_TIER, new SelectList(Model.McCafeBistroTier, "value", "text", Model.McCafeBistroTier[0].value), new { @class = "form-control input-sm" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.PROJECT_GOLD_PRICE_TIER, "Project Gold price tier", new { @class = "form-label " })
                        @Html.DropDownListFor(m => Model.PROJECT_GOLD_PRICE_TIER, new SelectList(Model.ProjectGoldTier, "value", "text", Model.ProjectGoldTier[0].value), new { @class = "form-control input-sm" })
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="container-fluid">
                    <div class="form-group">
                        @Html.LabelFor(model => Model.PROFIT_CENTER, "Profit center", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.PROFIT_CENTER, new SelectList(Model.ProfitCenter, "value", "text", Model.ProfitCenter[0].value), new { @class = "form-control input-sm" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.OWNERSHIP, "Ownership", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.OWNERSHIP, new SelectList(Model.OwnershipList, "value", "text", Model.OwnershipList[0].value), new { @class = "form-control input-sm" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.LOCATION, "Location", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.LOCATION, new SelectList(Model.LocationList, "value", "text", Model.LocationList[0].value), new { @class = "form-control input-sm" })
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => Model.REGION, "Region", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.REGION, new SelectList(new List<Object>()), new { @class = "form-control input-sm", @Id = "region", @Value = Model.REGION })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.PROVINCE, "Province", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.PROVINCE, new SelectList(new List<Object>()), new { @class = "form-control input-sm", @Id = "province", @Value = Model.PROVINCE })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.CITY, "City", new { @class = "form-label col-md-3" })
                        @Html.DropDownListFor(m => Model.CITY, new SelectList(new List<Object>()), new { @class = "form-control input-sm", @Id = "city", @Value = Model.CITY })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <h4 align="center"><strong>Store Attributes</strong></h4>
            <div class="col-md-4">
                <div class="container-fluid">
                    <div class="form-group">
                        @Html.LabelFor(m => Model.SOFT_SERVE_OR_VANILLA_POWDER_MIX, "Soft serve or vanilla powder mix", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.SOFT_SERVE_OR_VANILLA_POWDER_MIX, new SelectList(
                        new List<Object>{
                            new { value = "0" , text = "Soft serve"  },
                            new { value = "1" , text = "Vanilla powder mix" }
                        }, "value", "text", Model.SOFT_SERVE_OR_VANILLA_POWDER_MIX), new { @class = "form-control input-sm" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => Model.FRESH_OR_FROZEN, "Fresh or frozen", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.FRESH_OR_FROZEN, new SelectList(
                        new List<Object>{
                            new { value = "0" , text = "Fresh"  },
                            new { value = "1" , text = "Frozen" }
                        }, "value", "text", Model.FRESH_OR_FROZEN), new { @class = "form-control input-sm", @Value = Model.FRESH_OR_FROZEN })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="container-fluid">
                    <div class="form-group">
                        @Html.LabelFor(m => Model.SIMPLOT_OR_MCCAIN, "Simplot or McCain", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.SIMPLOT_OR_MCCAIN, new SelectList(
                        new List<Object>{
                            new { value = "0" , text = "Simplot"  },
                            new { value = "1" , text = "McCain" }
                        }, "value", "text", Model.SIMPLOT_OR_MCCAIN), new { @class = "form-control input-sm" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => Model.PAPER_OR_PLASTIC, "Paper or plastic", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.PAPER_OR_PLASTIC, new SelectList(
                        new List<Object>{
                            new { value = "0" , text = "Paper"  },
                            new { value = "1" , text = "Plastic" }
                        }, "value", "text", Model.PAPER_OR_PLASTIC), new { @class = "form-control input-sm" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="container-fluid">
                    <div class="form-group">
                        @Html.LabelFor(m => Model.MCCORMICK_OR_GSF, "McCormick or GSF", new { @class = "form-label" })
                        @Html.DropDownListFor(m => Model.MCCORMICK_OR_GSF, new SelectList(
                        new List<Object>{
                            new { value = "0" , text = "McCormick"  },
                            new { value = "1" , text = "GSF" }
                        }, "value", "text", Model.MCCORMICK_OR_GSF), new { @class = "form-control input-sm" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-inline bottom float" style="right:50px">
            <input type="submit" name="command" value="Save" class="btn btn-default" />
            <input type="submit" name="command" value="Delete" class="btn btn-default" />
        </div>
    }
</div>

<div class="modal fade" id="search-result-modal" role="dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button class="close" data-dismiss="modal">&times;</button>
            <h4>All items</h4>
            <div class="container-fluid">
                <input type="search" class="form-control" id="SearchFrontEnd" placeholder="Search store" autofocus />
            </div>
        </div>
        @using (Html.BeginForm())
        {
            <div class="modal-body">
                @for (int i = 0; i < Model.StoreList.Count(); i++)
                {
                    string ActiveInactive = "active";
                    <button type="submit" class="modal-item-select tr-collapse @Model.StoreList[i].Store_No @Model.StoreList[i].Store_Name @ActiveInactive" name="value" value=@Model.StoreList[i].Store_No>
                        <div class="col-lg-3">
                            @Model.StoreList[i].Store_No
                        </div>
                        <div class="col-lg-9">
                            @Model.StoreList[i].Store_Name
                        </div>
                    </button>
                }
            </div>
        }
    </div>
</div>

<script>
    // Region, Province, and City Dropdown Handling
    @{
        string region = "NCR";
        string province = "";
        string city = "";
        if (@Model.REGION != null)
        {
            region = @Model.REGION;
        }
        if (@Model.PROVINCE != null)
        {
            province = @Model.PROVINCE;
        }
        if (@Model.CITY != null)
        {
            city = @Model.CITY;
        }
    }
    $(window).ready(function () {
        $("option[value='@region'").attr("selected", "selected");
        updateProvince();
        $("option[value='@province'").attr("selected", "selected");
        updateCity();
        $("option[value='@city'").attr("selected", "selected");
    });

</script>
