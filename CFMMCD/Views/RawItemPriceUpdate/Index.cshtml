@model CFMMCD.Models.ViewModel.RawItemPriceUpdateViewModel
@using CFMMCD.Models.ViewModel

@{
    ViewBag.Title = "Raw Item Price Update";
    int HasSearch = 0;
    if (TempData["SearchResult"] != null)
    {
        HasSearch = (int)TempData["SearchResult"];
    }
}
<h2 align="center">@ViewBag.Title</h2>
<!--Alerts-->
<div class="container">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissable fade in">@TempData["ErrorMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissable fade in">@TempData["SuccessMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
</div>
<div class="form-horizontal" style="top:100px;position:relative;">
    <div class="container-fluid">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="col-lg-4 label-container-left">
                <label class="form-label" for="menu-item">Raw item name / Raw item number</label>
            </div>
            <div class="col-lg-5">
                @Html.TextBoxFor(m => m.SearchItem, new { @class = "form-control" })
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-1">
                <button type="submit" class="btn btn-default" name="command" value="Search"><span class="glyphicon glyphicon-search"></span>&nbsp;Search</button>
            </div>
        }
    </div>
    <div class="container-fluid" style="padding-top:100px">
        @using (Html.BeginForm("DisplaySearchResult", "RawItemPriceUpdate", FormMethod.Post, new { }))
        {

            <div class="col-lg-8 col-lg-offset-2">
                <div class="col-lg-3">
                    @Html.HiddenFor(m => m.RIM_VEM_ID, new { @Value = Model.RIM_VEM_ID })
                    <div class="form-group">
                        <label class="form-label">Raw item number</label>
                        <p class="label-info">@Model.RIMRIC</p>
                        @Html.HiddenFor(m => m.RIMRIC, new { @Value = Model.RIMRIC })
                    </div>
                    <div class="form-group">
                        <label class="form-label">Raw item name</label>
                        <p class="label-info">@Model.RIMRID</p>
                        @Html.HiddenFor(m => m.RIMRID, new { @Value = Model.RIMRID })
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label class="form-label">Price per CS</label>
                        <p class="label-info">@Model.RIMCPR</p>
                        @Html.HiddenFor(m => m.RIMCPR, new { @Value = Model.RIMCPR })
                    </div>
                    <div class="form-group">
                        <label class="form-label">Vendor name</label>
                        <p class="label-info">@Model.VEMDS1</p>
                        @Html.HiddenFor(m => m.VEMDS1, new { @Value = Model.VEMDS1 })
                        @Html.HiddenFor(m => m.VEMVEN, new { @Value = Model.VEMVEN })
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.RIMCPN, "New price per CS", new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.RIMCPN, new { @class = "form-control", @Value = Model.RIMCPN, @type = "number", @maxlength = "15" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.RIMPDT, "New date", new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.RIMPDT, new { @class = "form-control", @Value = Model.RIMPDT, @type = "date" })
                    </div>
                </div>
            </div> 
        }
        <div class="form-inline bottom float" style="right:50px">
            <button type="submit" name="command" value="Save" class="btn btn-default">Save</button>
            <button type="submit" name="command" value="Delete" class="btn btn-default">Delete</button>
        </div>
    </div>
</div>

<div class="modal fade" id="search-result-modal" role="dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button class="close" data-dismiss="modal">&times;</button>
            <h4>Search results</h4>
        </div>
        @using (Html.BeginForm("DisplaySearchResult", "RawItemMaster", FormMethod.Post, new { }))
        {
            List<RawItemPriceUpdateViewModel> RIPList = (List<RawItemPriceUpdateViewModel>)Session["ViewModelList"];
            if (RIPList != null)
            {
                <div class="modal-body">
                    @{if (HasSearch == 1 && RIPList != null)
                        {
                            foreach (RawItemPriceUpdateViewModel vm in RIPList)
                            {
                                <button type="submit" class="modal-item-select" name="value" value=@vm.RIM_VEM_ID>
                                    <div class="col-lg-2">
                                        @vm.RIMRIC
                                    </div>
                                    <div class="col-lg-5">
                                        @vm.RIMRID
                                    </div>
                                    <div class="col-lg-5">
                                        @vm.VEMDS1
                                    </div>
                                </button>
                            }
                        }
                    }
                </div>
            }
        }
    </div>
</div>

<script>
    $(window).ready(function () {
        if (@HasSearch === 1) {
            $("#search-result-modal").modal('show');
        }
    });
</script>