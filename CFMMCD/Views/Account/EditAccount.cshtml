@model CFMMCD.Models.ViewModel.AccountViewModel
@using CFMMCD.Models.ViewModel

@{
    ViewBag.Title = "Edit User Account";
    HtmlHelper.ClientValidationEnabled = false;
}

<h1 align="center">@ViewBag.Title</h1>
<hr />
<div class="center-sm">
    <!--Alerts-->
    <div class="container-fluid">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissable fade in">@TempData["ErrorMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
        }
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissable fade in">@TempData["SuccessMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
        }
    </div>
    <hr />
    <div class="container-fluid">
        <div class="col-lg-12">
            <input type="text" class="form-control" placeholder="Search user" id="search_dummy" />
        </div>
    </div>
    <hr />
    @using (Html.BeginForm("EditAccount", "Account", FormMethod.Post, new { }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor( m => Model.OldUsername ) // 
        @Html.HiddenFor( m => Model.EditMode, new { @Value = false })
        @Html.HiddenFor( m => Model.UserAccess )
        <div class="form-group">
            @Html.TextBoxFor(m => Model.Username, new { @class = "form-control", @placeholder = "Username" })
        </div>
        <div class="form-group">
            @Html.PasswordFor(m => Model.Password, new { @class = "form-control", @placeholder = "Password" })
        </div>
        <div class="form-group">
            @Html.PasswordFor(m => Model.PasswordVerify, new { @class = "form-control", @placeholder = "Confirm password" })
        </div>
        <div class="form-group">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-default" name="command" value="Save">Save</button>
            <button type="submit" class="btn btn-default" name="command" value="Search">Delete</button>
        </div>
    }
</div>

<!--Search result modal-->
<div class="modal fade" id="search-result-modal" role="dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button class="close" data-dismiss="modal">&times;</button>
            <h4>All items</h4>
            <div class="container-fluid">
                <input type="search" class="form-control" id="SearchFrontEnd" placeholder="Search user" autofocus />
            </div>
        </div>
        @using (Html.BeginForm("EditAccount", "Account", FormMethod.Post, new { } ))
        {
            <div class="modal-body">
                @for (int i = 0; i < Model.AccountList.Count(); i++)
                {
                    string ActiveInactive = "active";
                    <button type="submit" class="modal-item-select tr-collapse @Model.AccountList[i] @ActiveInactive" name="value" value=@Model.AccountList[i] >
                        <div class="col-lg-3">
                            @Model.AccountList[i]
                        </div>
                    </button>
                }
            </div>
        }
    </div>
</div>
