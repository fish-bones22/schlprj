@model CFMMCD.Models.ViewModel.SCMRecipeViewModel
@using CFMMCD.Models.ViewModel

@{  int j = 0;
    int HasSearch = 0;
    if (TempData["SearchResult"] != null)
    {
        HasSearch = (int)TempData["SearchResult"];
    }
    ViewBag.Title = "SCM Recipe";
}


<h2 align="center">@ViewBag.Title</h2>
<hr />
<!--Alerts-->
<div class="container">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissable fade in">@TempData["ErrorMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissable fade in">@TempData["SuccessMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
</div>
<!--Main content starts here-->
<div class="form-horizontal">

    <div class="form-horizontal">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="container-fluid">
                <div class="col-lg-2 col-lg-offset-2">
                    <label class="form-label" for="menu-item">Value meal name/number</label>
                </div>
                <div class="col-lg-5">
                    @Html.TextBoxFor(m => m.SearchItem, new { @class = "form-control" })
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-1">
                    <button type="submit" class="btn btn-default"><span class="glyphicon glyphicon-search"></span>&nbsp;Search</button>
                </div>
            </div>
        }
    </div>

    <hr />

    <div class="form-horizontal">
        @using (Html.BeginForm("UpdateDelete", "SCMRecipe", FormMethod.Post, new { }))
        {
            <div class="container-fluid">
                <div class="col-lg-6 col-lg-offset-3">
                    <div class="col-lg-12">
                        @Html.LabelFor(m => Model.CSMDES, "Description", new { @class = "form-label" })
                        @Html.TextBoxFor(m => Model.CSMDES, new { @class = "form-control" })

                    </div>
                </div>
            </div>

            <hr />

            <div class="container-fluid">
                <table class="table-hover table-responsive table">
                    <thead>
                        <tr>
                            <td></td>
                            <td>Raw item number</td>
                            <td>Raw item name</td>
                            <td>Factor</td>
                            <td>Price</td>
                            <td>Waste</td>
                            <td>Store attribute</td>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            if (Model.RawItemList != null || Model.RawItemList.Count() <= 1)
                            {
                                for (int i = 0; i < Model.RawItemList.Count(); i++)
                                {
                                    <!--Generated rows-->
                                    <tr>
                                        <td></td>
                                        @Html.HiddenFor(m => Model.RawItemList[i].CSMID)
                                        <td> @Html.TextBoxFor(m => Model.RawItemList[i].RIMRIC, new { @class = "form-control input-sm" }) </td>
                                        <td> @Html.DisplayFor(m => Model.RawItemList[i].RIMRID, new { @class = "form-control input-sm" }) </td>
                                        <td> @Html.TextBoxFor(m => Model.RawItemList[i].CSMSFQ, new { @class = "form-control input-sm" }) </td>
                                        <td> @Html.DisplayFor(m => Model.RawItemList[i].RIMCPR, new { @class = "form-control input-sm" }) </td>
                                        <td>
                                            @Html.DropDownListFor(m => Model.RawItemList[i].CSMCWC, new SelectList(new List<Object>() {
                                            new { value = "0" , text = "Active"  },
                                            new { value = "1" , text = "Inactive" } }, "value", "text"), new { @class = "form-control input-sm" })
                                        </td>
                                        <td> @Html.DisplayFor(m => Model.RawItemList[i].StoAtt, new { @class = "form-control input-sm" }) </td>
                                    </tr>
                                }
                            }
                            <!--Empty row-->
                            <tr>
                                <td></td>
                                <td> @Html.TextBoxFor(m => Model.RIMRIC[0], new { @class = "form-control input-sm" }) </td>
                                <td> @Html.DisplayFor(m => Model.RIMRID[0], new { @class = "form-control input-sm" }) </td>
                                <td> @Html.TextBoxFor(m => Model.CSMSFQ[0], new { @class = "form-control input-sm" }) </td>
                                <td> @Html.DisplayFor(m => Model.RIMCPR[0], new { @class = "form-control input-sm" }) </td>
                                <td>
                                    @Html.DropDownListFor(m => Model.CSMCWC[0], new SelectList(new List<Object>() {
                                            new { value = "0" , text = "Active"  },
                                            new { value = "1" , text = "Inactive" } }, "value", "text"), new { @class = "form-control input-sm" })
                                </td>
                                <td>@Html.DisplayFor(m => Model.StoAtt[0], new { @class = "form-control input-sm" })</td>

                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <!--Add new row-->
                        <tr id="add-row">
                            <td></td>
                            <td><button type="button" class="btn btn-default btn-sm" id="add-row">Add new item</button></td>
                        </tr>
                    </tfoot>
                </table>
            </div>

            <div class="form-inline bottom float" style="right:50px">
                <button type="submit" name="command" value="Save" class="btn btn-default">Save</button>
            </div>
                            }
    </div>
</div>

<!--Search result modal-->
<div class="modal fade" id="search-result-modal" role="dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button class="close" data-dismiss="modal">&times;</button>
            <h4>Search results</h4>
        </div>
        @using (Html.BeginForm("DisplaySearchResult", "SCMRecipe", FormMethod.Post, new { }))
        {
            List<SCMRecipeViewModel> VMList = (List<SCMRecipeViewModel>)Session["ViewModelList"];
            if (VMList != null)
            {
                <div class="modal-body">
                    @{
                        if (HasSearch == 1 && VMList != null)
                        {
                            foreach (SCMRecipeViewModel vm in VMList)
                            {
                                <button type="submit" class="modal-item-select" name="value" value=@vm.CSMID>
                                    <div class="col-lg-3">
                                        @vm.CSMDES
                                    </div>
                                </button>
                            }
                        }
                    }
                </div>
            }
        }
    </div>
</div>

<script>
    var index = 0;
    var newRow = '<tr>'+
                    '<td></td>'+
                    '<td> <input class="form-control input-sm" id="RIMRIC_'+(++index)+'_" name="RIMRIC['+index+']" type="text" value="" /> </td>'+
                    '<td>  </td>'+
                    '<td> <input class="form-control input-sm" id="CSMSFQ_'+index+'_" name="CSMSFQ['+index+']" type="text" value="" /> </td>'+
                    '<td>  </td>'+
                    '<td>'+
                        '<select class="form-control input-sm" id="CSMCWC_'+index+'_" name="CSMCWC['+index+']">'+
                            '<option value="0">Active</option>'+
                            '<option value="1">Inactive</option>'+
                        '</select>'+
                   '</td>'+
                    '<td></td>'+
                '</tr>';

    console.log(newRow);
    $(window).ready(function () {
        if (@HasSearch === 1) {
            $("#search-result-modal").modal('show');
        }

        $("#add-row").click(function() {
            $("tbody").append (newRow);
        });
    });
</script>