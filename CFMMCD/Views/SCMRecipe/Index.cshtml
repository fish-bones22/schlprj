@model CFMMCD.Models.ViewModel.SCMRecipeViewModel
@using CFMMCD.Models.ViewModel

@{
    ViewBag.Title = "SCM Master Recipe";
}


<h2 align="center">@ViewBag.Title</h2>
<hr />
<!--Alerts-->
<div class="container-fluid">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissable fade in">@TempData["ErrorMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissable fade in">@TempData["SuccessMessage"]<button class="close" data-dismiss="alert" aria-label="close">&times;</button></div>
    }
</div>
<!--Main content starts here-->
<div class="form-horizontal">

    <div class="form-horizontal">
        @using (Html.BeginForm("UpdateDelete", "SCMRecipe", FormMethod.Post, new { @Id = "RecipeForm" }))
        {
            <div class="container-fluid">
                <div class="col-lg-6 col-lg-offset-3">
                    <div class="col-lg-12">
                        @Html.LabelFor(m => Model.CSMDES, "Description", new { @class = "form-label" })
                        @Html.TextBoxFor(m => Model.CSMDES, new { @class = "form-control", @required = "required" })
                    </div>
                </div>
            </div>

            <hr />

            <div class="container-fluid">
                <table class="table-hover table-responsive table">
                    <thead>
                        <tr>
                            <td></td>
                            <td>Raw item number</td>
                            <td>Raw item name</td>
                            <td>Factor</td>
                            <td>Price</td>
                            <td>Waste</td>
                            <td>Store attribute</td>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                                for (int i = 0; i < Model.RawItemList.Count(); i++)
                                {
                                    Model.RawItemList[i].PreviousRIMRIC = Model.RawItemList[i].RIMRIC;
                                    <!--Generated rows-->
                                    <tr>
                                        <td></td>
                                        @Html.HiddenFor(m => Model.RawItemList[i].CSMID)
                                        <td> 
                                            @Html.TextBoxFor(m => Model.RawItemList[i].RIMRIC, new { @class = "tb-select form-control input-sm", @type = "number", @max = "99999" }) 
                                            @Html.HiddenFor(m => Model.RawItemList[i].PreviousRIMRIC)
                                        </td>
                                        <td> @Html.DisplayFor(m => Model.RawItemList[i].RIMRID, new { @class = "form-control input-sm" }) </td>
                                        <td> @Html.TextBoxFor(m => Model.RawItemList[i].CSMSFQ, new { @class = "form-control input-sm" }) </td>
                                        <td> @Html.DisplayFor(m => Model.RawItemList[i].RIMCPR, new { @class = "form-control input-sm" }) </td>
                                        <td>
                                            @Html.DropDownListFor(m => Model.RawItemList[i].CSMCWC, new SelectList(new List<Object>() {
                                            new { value = "0" , text = "Active"  },
                                            new { value = "1" , text = "Inactive" } }, "value", "text"), new { @class = "form-control input-sm" })
                                        </td>
                                        <td> @Html.DisplayFor(m => Model.RawItemList[i].StoAtt, new { @class = "form-control input-sm" }) </td>
                                        <td><button type="button" class="close delete-row">&times;</button></td>
                                    </tr>
                                }
                            <!--Empty row-->
                            <tr>
                                <td></td>
                                <td> @Html.TextBoxFor(m => Model.RIMRIC[0], new { @class = "tb-select form-control input-sm", @type = "number", @max = "99999" }) </td>
                                <td> @Html.DisplayFor(m => Model.RIMRID[0], new { @class = "form-control input-sm" }) </td>
                                <td> @Html.TextBoxFor(m => Model.CSMSFQ[0], new { @class = "form-control input-sm" }) </td>
                                <td> @Html.DisplayFor(m => Model.RIMCPR[0], new { @class = "form-control input-sm" }) </td>
                                <td>
                                    @Html.DropDownListFor(m => Model.CSMCWC[0], new SelectList(new List<Object>() {
                                            new { value = "0" , text = "Active"  },
                                            new { value = "1" , text = "Inactive" } }, "value", "text"), new { @class = "form-control input-sm" })
                                </td>
                                <td>@Html.DisplayFor(m => Model.StoAtt[0], new { @class = "form-control input-sm" })</td>
                                <td><button type="button" class="close delete-row">&times;</button></td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <!--Add new row-->
                        <tr id="add-row">
                            <td></td>
                            <td><button type="button" class="btn btn-default btn-sm" id="add-row">Add new item</button></td>
                        </tr>
                    </tfoot>
                </table>
            </div>

            <div class="form-inline bottom float" style="right:50px">
                <button type="submit" name="command" value="Save" class="btn btn-default">Save</button>
            </div>
        }
    </div>
</div>

<!--Search Menu Item Modal-->
<div class="modal fade" id="search-item-modal" role="dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button class="close" data-dismiss="modal">&times;</button>
            <h4>Select Menu item</h4>
            <div class="container-fluid">
                <input type="search" class="form-control" id="SearchFrontEnd" placeholder="Search value meal" autofocus />
            </div>
            <hr />
            <div class="container-fluid text-center">
                <div class="col-lg-4"><strong>Menu item code</strong></div>
                <div class="col-lg-8"><strong>Menu item name</strong></div>
            </div>
        </div>
        <div class="modal-body">
            @for (int i = 0; i < Model.AllRawItems.Count(); i++)
            {
                string ActiveInactive = "active";
                if (Model.AllRawItems[i].RIMSTA.Equals("1"))
                {
                    ActiveInactive = "inactive";
                }
                <button type="button" class="modal-item-select tr-collapse @Model.AllRawItems[i].RIMRID @Model.AllRawItems[i].RIMRIC @ActiveInactive" name="value" value=@Model.AllRawItems[i].RIMRIC data-dismiss="modal">
                    <div class="col-lg-4">
                        @Model.AllRawItems[i].RIMRIC
                    </div>
                    <div class="col-lg-8">
                        @Model.AllRawItems[i].RIMRID
                    </div>
                </button>
            }
        </div>
    </div>
</div>

<script>
    var TextBoxPressed;
    var index = 0;
    var newRow = '<tr>'+
                    '<td></td>'+
                    '<td> <input class="tb-select form-control input-sm" id="RIMRIC_' + (++index) + '_" name="RIMRIC[' + index + ']" type="number" max="99999" value="" /> </td>' +
                    '<td>  </td>'+
                    '<td> <input class="form-control input-sm" id="CSMSFQ_'+index+'_" name="CSMSFQ['+index+']" type="text" value="" /> </td>'+
                    '<td>  </td>'+
                    '<td>'+
                        '<select class="form-control input-sm" id="CSMCWC_'+index+'_" name="CSMCWC['+index+']">'+
                            '<option value="0">Active</option>'+
                            '<option value="1">Inactive</option>'+
                        '</select>'+
                   '</td>'+
                    '<td></td>' +
                    '<td><button type="button" class="close delete-row">&times;</button></td>' +
                '</tr>';

    $(window).ready(function () {

        setEventListener();
        $("#add-row").click(function () {
            if ($("tbody tr:last-child").children("td").children("input[type=number]").val() != "" || $("tbody tr:last-child").hasClass("hidden")) {
                $("tbody").append(newRow);
                setEventListener();
            }
        });

        setShowModalSelectListener();
    });

    function setEventListener() {
        $(".delete-row").click(function () {
            var hiddenTr = $("tbody .hidden").length;
            var totalTr = $("tbody tr").length;
            if (totalTr - hiddenTr > 1) {
                $(this).parent().siblings("td").each(function () {
                    $(this).children("input[type=number]").val("");
                });
                $(this).parent().parent("tr").addClass("hidden");
            }
        });

        $(".modal-item-select").click(onItemSelected);
    }

    function setShowModalSelectListener() {
        $(".tb-select").click(function () {
            TextBoxPressed = $(this);
            $("#search-item-modal").modal("show");
        });
    }

    function onItemSelected() {
        TextBoxPressed.val($(this).val());
        $("#RecipeForm").submit();
    }
</script>